<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAYltDAGJbQwBjWkQDZFpFA2RaRQNkWkUDZFpFA2RaRQNkWkUDZFpFA2Ra
        RQNkWkUDZFpFA2RaRQNkWkUDZFpFA2RaRQNkWkUDZFpFA2RaRQNkWkUDZFpFA2RaRQNiWkMBY1pEAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjWkQAY1pEFGRaRYxkWkWkZFpFo2RaRaNkWkWjZFpFo2Ra
        RaNkWkWjZFpFo2RaRaNkWkWjZFpFo2RaRaNkWkWjZFpFo2RaRaNkWkWjZFpFo2RaRaNkWkWjZFpFoWRa
        RThkWkUAY1pFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNZRQBjWUUZZFpF0mRaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX2ZFpFTWRaRQBkWkUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZFlEAGRZRApkWkWxZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaReRkWkUuZFpFAGVZRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjWUQAZltHAGRa
        RXRkWkX9ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpE/2RZQ/9kWkb/ZFpE/2RaRP9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpFtWRZRQ1kWUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5c
        QwBkWkUAZFpFJ2RaRdVkWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRP9jXkz/XHyJ/1aTtv9Zh5//YWVb/2RZ
        RP9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRfVkWkVcZVpFAGNaRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGJaRABYWDoAZFpFY2RaRfFkWkX/ZFpF/2RaRf9kWkX/ZFtG/1qEmf9PtPf/TLj//024
        /v9VmcP/YmFT/2RaRP9kWkX/ZFpF/2RaRf9kWkX+ZFpFnmRaRQ1kWkUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNaRQBjWkUIZFpFdmRaRe9kWkX/ZFpF/2RZQ/9haGH+T6nj/zWu
        //8fpf//K6r//0ey+v9cfYr+ZFlD/2RaRf9kWkX/ZFpF+2RaRaljWkUdZFpFAGNVRQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNZRQBjWUUHZFpEV2VaQ8lkWkT6ZVlB/1l7
        i/0qqPz/BZr//wCY//8BmP//GqT//0ySvv1kXEj+ZVpE/mRaROFkWkSAY1pFFmRaRQBiWEMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJXzgAsWOMCOFe+VzhM
        lOhLT2j/NX60/wWa//8Al///AJf//wCX//8Amf//IY/d/0xYbv89S4H6OFOsgUhcpwhBWKUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbA/wAGwP8VBsD/QgfA/wQac/8AIVf/EiJX
        /3EhV//eE0LW/w83uP8IduP/B53//xSg//8bo///GKH//wye//8FjPX/D0O+/w86xv8eUvfnIlf/ayJX
        /wgiV/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwf8ADbP/AAfB/28Hwf/YCL3/NiNS
        /zMiV/+uIlf/+CJX/v8TQdX/Dz3C/ySJ7f8+sv//SbX//0y3//9Ltv//Q7T//y2h+f8UT83/DjnG/x9T
        9/8iV//yIlf/hSJX/xAiV/8AH1T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMX/AAfB/wAHwf8kB8H/0wfC
        //8Pof/JIlf/2yJX//8iV///Ilb+/xdJ2f8xgOP/TLP9/063//9Nt///Tbf//023//9Ot///Trf//z6Z
        8P8aUNL/H1L2/yJX//8iV//5Ilf/nSJX/xwiVv8AIlj/AAAAAAAAAAAAAAAAAAAAAAAGwP8ACcP/AAfB
        /3IHwf/9B8P//xCd//8iWP//Ilf//yJX//8iVv7/L3jw/0u0/P9NuP//Tbf//023//9Nt///Tbf//023
        //9Nt///Trj//zqQ8v8iWfr/Ilf//yJX//8iV///Ilf/iyJX/wEiV/8AAAAAAAAAAAAAAAAAAAAAAAfA
        /wAHvP8BB8H/lwfB//8Hw///D6D//yFa//8iV///Ilf//yJY//8+lP//Trn//023//9Nt///Tbf//023
        //9Nt///Tbf//024//9NuP//SKv//ydj//8iVv//Ilf//yJX//8iV/+eIlX/AiJW/wAAAAAAAAAAAAAA
        AAAAAAAAB8D/AAfB/wAHwf9MB8H/4gfC//0Pof/hIVr/+CJX//8iV///Ilj//z6V//9Ouf//SrH4/0qx
        +P9Nt///Tbf//023//9MtPv/Sa/1/023/v9Iq///J2P//yJW//8iV///Ilf//yJX/48iTf8AIlb/AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAB8H/AATB/wEHwf9yB8L/4hSO/2QiVv/mIlf//yJX//8iWP//PpX//065
        //81g8D/NYPA/023//9Nt///Trj//0Cc3v8scKr/SrD1/0is//8nY///Ilb//yJX//8iV///Ilf/eyRZ
        /wAhVv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAHwf8AB8H/AAfB/10Hwv/aFI//PCJW/9QiV///Ilf//yJX
        //88kv//Trn//0Sj5/9Eo+f/Tbf//023//9NuP//SK3z/0Cc3v9Mtfv/SKv//ydj//8iVv//Ilf//yJX
        //0iV/9hIlf/ACJX/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAfB/wAHwf8AB8H/XQfB/9wOpv8sIlb/syJX
        //8iV///Ilf//ypp//89lP//S7P//065//9Nt///Tbf//023//9NuP//Trj//024//9IrP//J2P//yJW
        //8iV///Ilf/8SJX/0MiV/8AIlj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAB8H/AAfB/wAHwf9dB8H/3AfB
        /yEiVf+JIlf//yJX//8iV///Ilb//yRb//8wdv//Qp///0y1//9NuP//Tbf//023//9Nt///Tbj//0Gc
        //8lXf//Ilf//yJX//8iV//aIlf/ISJX/wAjWP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAHwf8AB8H/AAfB
        /10Hwf/cBM3/HSNU/1MiV//3Ilf//yJX//8hV///IFb//yBV//8lX///NIH//0ao//9Mt///TLj//0y5
        //9FqP//Kmz//yJW//8iV///Ilf//yJX/60iVv8JIlb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfB
        /wAHwf8AB8H/XQfB/9wGx/8fIU//HSFX/9AhV///OF/e/1Zrsf9IZsb/PmLV/zZe4f8xXej/N2zr/0mT
        6f9XrOT/W6nZ/1KCzP9Sabf/SGbG/yNX/v8hV//7IFf/aCRZ/wAbVP8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAB8H/AAfB/wAHwf9dB8H/3AbD/iBqUjodQFirsiVX9P9DZM3/in9l/4uAZP+Hfmr/g3xw/4B7
        c/9/enX/gX10/4WEcf+Ig2z/iX9m/42AYP9hcKH/IVf+/y1X3u1LWItRl10AAmRaQwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAHwf4ACMD9AAfB/10PuO/jT3FufmVZQ8hjWkn6S1iJ/0lhsv+GfWr/jIBh/4yA
        Yf+NgGH/jYBh/42AYf+NgGH/jIBh/4yAYf+MgGL/jIBh/1xrn/86WLr/WFlo/mRaROFkWkWHZFlFJmNa
        RQJjWkUAZFlFAAAAAAAAAAAAAAAAABqr2AArmbYAJaDCRkh5fOVjW0j8ZFpF/2RaRf9kWkT/ZV5R/4V6
        X/+NgGL/jIBi/4yAYv+MgGL/jIBi/4yAYv+MgGL/jIBi/4yAYv+Lf2H/bWZY/2JZSv9lWkT/ZFpF/2Ra
        Rf5kWkXNZFlFPGNaRgBkWUMAAAAAAAAAAAAAAAAAAAAAAGtSNgBrUDUFZ1Y+Q2RaRbRkWkX4ZFpF/2Ra
        Rf9lWkX/dWpR/4d7Xv+Lf2L/jIBi/42BYv+NgWL/jYFi/4yAYv+MgGL/in5h/35zWP9oXUf/ZFpE/2Ra
        Rf9kWkX+ZFpF1mRZRWxkWUUUZFlGAGRZQwAAAAAAAAAAAAAAAAAAAAAAAAAAAGNaQwBlWkQAZFpEEmRa
        RWtkWkXWZFpF/mRaRf9lW0X/amBK/3JoUP94bVT/fHFW/31yV/99clf/e3BW/3dsUv9vZE3/Z1xH/2Ra
        Rf9kWkX/ZFpF7WRaRZVkWUUqY1lGAWNZRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABkWkQAZFlDAWRZRSpkWkWWZFpF7WRaRf9kWkX/Y1lF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2NZ
        Rf9kWkX/ZFpF+mRaRb1kWkVMZFpFB2RaRQBhWUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABeXToAZFpFAGRaRAdkWkVMZFpFvmRaRfpkWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRd1kWkV1ZFlFFmRbRABjV0UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZFlBAGRcRgBkWkQXZFpFdWRaRd1kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRfFkWkWgZFlFMWRYRAJkWUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRZRABjWUMCZFpFMWRa
        RZ9kWkXwZFpF/2RaRftkWkXFZFpFVGNZRApkWUQAXlhEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGNU
        QABkWkUAY1lFDGRaRWJkWkXQZFpFkmNaRSBmXUMAY1pGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAD/gAAA/4AAAP+AAAD/wAAA/8AAAf/gAAH/4AAD//AAB//4AA//EA
        AH/wAAA/4AAAH+AAAA/AAAAP4AAAH+AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAP/AAAB/wAAAH8AAAB/AA
        AAf8AAAP/gAAP/+AAP//4AH///AH///8H/8=
</value>
  </data>
</root>